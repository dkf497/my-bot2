import telebot
from config import BOT_TOKEN, DB_PATH
from db import init_db, add_ticket
from faq import get_faq_answer
import sqlite3


ADMIN_USERNAMES = ["@Maks"]

bot = telebot.TeleBot(BOT_TOKEN)
init_db()

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n"
        "–Ø –±–æ—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ '–ü—Ä–æ–¥–∞—ë–º –≤—Å—ë –Ω–∞ —Å–≤–µ—Ç–µ'.\n"
        "–ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å ‚Äî –ø–æ–ø—Ä–æ–±—É—é –ø–æ–º–æ—á—å."
    )

@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(
        message.chat.id,
        "üìå –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥—É –æ—Ç–≤–µ—Ç, –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –Ω—É–∂–Ω–æ–º—É –æ—Ç–¥–µ–ª—É."
    )

@bot.message_handler(func=lambda msg: True, content_types=['text'])
def handle_message(message):
    
    if message.text.startswith("/reply"):
        return

    user_id = message.from_user.id
    user_name = message.from_user.username or message.from_user.first_name
    text = message.text.strip()

   
    print(f"–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç {user_name} (ID: {user_id}): {text}")

    answer = get_faq_answer(text)
    if answer:
        bot.send_message(message.chat.id, answer)
        return

    
    department = '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã' if any(k in text.lower() for k in ['—Å–∞–π—Ç', '–æ–ø–ª–∞—Ç–∞', '–æ—à–∏–±–∫–∞']) else '–æ—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂'
    ticket_id = add_ticket(user_id, user_name, department, text)

    bot.send_message(
        message.chat.id,
        f"‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω –≤ {department}. –ù–æ–º–µ—Ä —Ç–∏–∫–µ—Ç–∞: #{ticket_id}. –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç!"
    )


@bot.message_handler(commands=['reply'])
def reply_to_user(message):
    
    if message.from_user.username not in ADMIN_USERNAMES:
        bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    try:
        parts = message.text.split(maxsplit=2)
        ticket_id = int(parts[1])
        reply_text = parts[2]

        conn = sqlite3.connect(DB_PATH)
        cur = conn.cursor()
        cur.execute("SELECT user_id FROM tickets WHERE id = ?", (ticket_id,))
        row = cur.fetchone()
        conn.close()

        if not row:
            bot.send_message(message.chat.id, "‚ùå –¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        user_id = row[0]
        bot.send_message(user_id, f"üí¨ –û—Ç–≤–µ—Ç –æ—Ç –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂:\n{reply_text}")
        bot.send_message(message.chat.id, f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–∏–∫–µ—Ç #{ticket_id}).")

    except (IndexError, ValueError):
        bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /reply <ticket_id> <—Å–æ–æ–±—â–µ–Ω–∏–µ>")

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.polling(none_stop=True)
